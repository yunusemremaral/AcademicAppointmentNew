@model UserEditViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Kullanıcı Düzenle";
}

<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>
    <form asp-action="Edit" asp-route-id="@Model.User.Id" method="post" class="card p-4">
        @Html.AntiForgeryToken()
        <div asp-validation-summary="All" class="text-danger"></div>
        <input type="hidden" asp-for="User.Id" />

        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="User.UserFullName" class="form-label"></label>
                    <input asp-for="User.UserFullName" class="form-control" />
                    <span asp-validation-for="User.UserFullName" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="User.Email" class="form-label"></label>
                    <input asp-for="User.Email" class="form-control" />
                    <span asp-validation-for="User.Email" class="text-danger"></span>
                </div>
            </div>

            <div class="col-md-6">
                <div class="mb-3">
                    <label asp-for="User.SchoolId" class="form-label"></label>
                    <select asp-for="User.SchoolId" id="schoolSelect" class="form-control">
                        <option value="">-- Okul Seçin --</option>
                    </select>
                    <span asp-validation-for="User.SchoolId" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label asp-for="User.DepartmentId" class="form-label"></label>
                    <select asp-for="User.DepartmentId" id="departmentSelect" class="form-control">
                        <option value="">-- Önce Okul Seçiniz --</option>
                    </select>
                    <span asp-validation-for="User.DepartmentId" class="text-danger"></span>
                </div>
            </div>
        </div>

        <div class="mt-4">
            <button type="submit" class="btn btn-primary">Güncelle</button>
            <a asp-action="Index" class="btn btn-secondary">İptal</a>
        </div>
    </form>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        // Okul ve bölüm verilerini C# modelinden al
        var schools = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.SchoolsWithDepartments));

        $(document).ready(function() {
            var $school = $('#schoolSelect');
            var $dept = $('#departmentSelect');

            // Okul dropdown'ını doldur
            $.each(schools, function(index, school) {
                $school.append($('<option>', {
                    value: school.Id,
                    text: school.Name
                }));
            });

            // Bölüm dropdown'ını güncelleyen fonksiyon
            function updateDepartments(schoolId) {
                $dept.empty().prop('disabled', true);

                var selectedSchool = schools.find(s => s.Id === schoolId);
                if (selectedSchool) {
                    $dept.append($('<option>', { value: '', text: '-- Bölüm Seçiniz --' }));
                    $.each(selectedSchool.Departments, function(index, dept) {
                        $dept.append($('<option>', {
                            value: dept.Id,
                            text: dept.Name
                        }));
                    });
                    $dept.prop('disabled', false);
                }
            }

            // İlk yüklemede seçili değerleri ayarla
            var initialSchoolId = @(Model.User.SchoolId.HasValue ? Model.User.SchoolId : 0);
            var initialDeptId = @(Model.User.DepartmentId.HasValue ? Model.User.DepartmentId : 0);

            if (initialSchoolId > 0) {
                $school.val(initialSchoolId);
                updateDepartments(initialSchoolId);
                setTimeout(function() { // Bölümlerin yüklenmesi için kısa bekleme
                    $dept.val(initialDeptId);
                }, 100);
            }

            // Okul değiştiğinde bölümleri güncelle
            $school.change(function() {
                var schoolId = parseInt($(this).val());
                updateDepartments(schoolId);
            });
        });
    </script>
}